<v:View x:TypeArguments="local:PlayerPanelViewModel" x:Name="view"
    x:Class="Enigma.GameWPF.Visual.Game.PlayerPanelView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:v ="clr-namespace:Enigma.GameWPF.Visual"
             xmlns:local="clr-namespace:Enigma.GameWPF.Visual.Game"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Focusable="False">
    <UniformGrid Rows="1" Background="White">
        <UniformGrid.Resources>
            <SolidColorBrush x:Key="SelectedActive.Background" Color="#3D26A0DA"/>
            <SolidColorBrush x:Key="SelectedActive.Border" Color="#FF26A0DA"/>
            <Style x:Key="ItemViewStyleBase" TargetType="Button">
                <Setter Property="Background" Value="White"></Setter>
                <Style.Triggers>
                    <Trigger Property="local:PlayerPanelView.IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource SelectedActive.Border}"></Setter>
                        <Setter Property="Background" Value="{StaticResource SelectedActive.Background}"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ItemViewStyle" TargetType="Button" BasedOn="{StaticResource ItemViewStyleBase}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSlotEmpty}" Value="False"></Condition>
                            <Condition Binding="{Binding SelectedItemViewType,ElementName=view}" Value="{x:Static local:PlayerPanelView.ItemViewType_Shop}" ></Condition>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="IsEnabled" Value="False"></Setter>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ShopItemViewStyle" TargetType="Button" BasedOn="{StaticResource ItemViewStyleBase}">
                <Setter Property="IsEnabled" Value="{Binding IsSold,Converter={StaticResource InverseBoolConverter}}"></Setter>
            </Style>
        </UniformGrid.Resources>
        <StackPanel x:Name="equipmentView" DockPanel.Dock="Left">
            <TextBlock FontSize="36" HorizontalAlignment="Center">Equipment</TextBlock>
            <ItemsControl x:Name="itemsControl_Equipment" ItemsSource="{Binding ViewModel.EquipmentItemsViewModel,ElementName=view}">
                <Control.Template>
                    <ControlTemplate>
                        <StackPanel IsItemsHost="True"></StackPanel>
                    </ControlTemplate>
                </Control.Template>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button x:Name="button" Style="{StaticResource ItemViewStyle}" Click="Click_EquipmentItemView" MouseRightButtonUp="MouseRightButtonUp_EquipmentItemView">
                            <local:EquipmentAbilityItemView x:Name="equipmentAbilityItemView" ViewModel="{Binding}"/>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
        <StackPanel>
            <TextBlock HorizontalAlignment="Center" FontSize="36">Inventory</TextBlock>
            <ItemsControl x:Name="itemsControl_Inventory" ItemsSource="{Binding ViewModel.InventoryItemsViewModel,ElementName=view}" Focusable="False">
                <Control.Template>
                    <ControlTemplate>
                        <StackPanel IsItemsHost="True"></StackPanel>
                    </ControlTemplate>
                </Control.Template>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button x:Name="button" Style="{StaticResource ItemViewStyle}" Click="Click_InventoryItemView" MouseRightButtonUp="MouseRightButtonUp_InventoryItemView">
                            <local:AbilityItemView x:Name="abilityItemView" ViewModel="{Binding}"/>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
        <StackPanel x:Name="shopView" DockPanel.Dock="Right">
            <TextBlock FontSize="36" HorizontalAlignment="Center">Shop</TextBlock>
            <ItemsControl x:Name="itemsControl_Shop" ItemsSource="{Binding ViewModel.ShopItemsViewModel,ElementName=view}" Focusable="False">
                <Control.Template>
                    <ControlTemplate>
                        <StackPanel IsItemsHost="True"></StackPanel>
                    </ControlTemplate>
                </Control.Template>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button x:Name="button" Style="{StaticResource ShopItemViewStyle}" Click="Click_ShopItemView">
                            <local:ShopAbilityItemView x:Name="shopAbilityItemView" ViewModel="{Binding}"/>
                        </Button>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
    </UniformGrid>
</v:View>